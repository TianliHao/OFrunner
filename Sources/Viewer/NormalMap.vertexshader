#version 330 core
in vec3 vertexPosition_modelspace;
in vec3 vertexNormal_modelspace;
out vec3 Position_worldspace;
out vec3 Normal_cameraspace;
uniform mat4 MVP;
uniform mat4 V;
uniform mat4 M;
void main(){
	gl_Position =  MVP * vec4(vertexPosition_modelspace,1);
	Position_worldspace = (M * vec4(vertexPosition_modelspace,1)).xyz;
	vec3 vertexPosition_cameraspace = ( V * M * vec4(vertexPosition_modelspace,1)).xyz;
	Normal_cameraspace = ( V * M * vec4(vertexNormal_modelspace,0)).xyz; // Only correct if ModelMatrix does not scale the model ! Use its inverse transpose if not.
}

